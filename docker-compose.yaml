version: '3.1'

services:
  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_db:/data/postgres
      - postgres_db:/var/lib/postgresql/data
    networks:
      - services_network

  postgres_admin:
    image: dpage/pgadmin4:8.2
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - pg_admin_data:/var/lib/pgadmin
    networks:
      - services_network

  loki:
    container_name: loki
    image: grafana/loki:latest
    networks:
      - services_network
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./servicesConfig/loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - loki_data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    depends_on:
      - grafana
  
  grafana:
    image: grafana/grafana:latest
    networks:
      - services_network
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./servicesConfig/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
  
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    networks:
      - services_network
    restart: unless-stopped
    volumes:
      - ./servicesConfig/promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
      # to read container labels and logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
      - grafana  
volumes:
  postgres_db: {}
  pg_admin_data: {}
  loki_data: {}
  grafana_data: {}
networks:
  services_network: